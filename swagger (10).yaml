swagger: "2.0"

info:
  version: "1"
  title: Rank miniProgram API
  description: a document of Rank miniProgram API

host: 127.0.0.1:5000
basePath: /v1
schemes:
  - https
  
consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
   APIKeyHeader:
     type: apiKey
     in: header
     name: session

      
paths:
  /login/:
     post:
        tags:
          - auth
        summary: Using the code generated by wechat to login
        consumes:
          - application/json
        parameters: 
          - in: body
            name: code
            description:  Response content of wx.login(Object object) to verify user's identity
            schema:
              type: object
              properties:
                code:
                  type: string
                
        responses:
          200:
            description: OK, return user's information
            headers:
              Set-Cookie:
                type: string
                description: a string to save user's session 
                            like "session=afefw##q32"
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: user id
                openid:
                  type: string
                stdnum:
                  type: string
                department_id:
                  type: integer
                department_name:
                  type: string
                username:
                  type: string
                qq:
                  type: string
                booknum:
                  type: integer
                likes:
                  type: integer
          400:
            description: code Error
          401:
            description: Unauthorized, need to register 
          
  /bind/:
    post:
      tags: 
        - auth
      summary: Bind stdnum and wechat
      consumes:
        - application/json
      parameters: 
        - in: body
          name: data
          schema:
            type: object
            properties:
              stdnum:
                type: string
              password:
                type: string
              code:
                type: string
              username:
                type: string

          
      responses:
        200:
          description: OK, binded, need to login
          headers:
            Set-Cookie:
              type: string
              description: a string to save user's session 
                          like "session=afefw##q32"
        400:
          description: Bad request
          schema:
            type: object
            properties:
              message:
                type: string
                description: 1. Username or password is wrong
                             2. Already registered
  /users/my/info/avatar:
    put:
      security: 
        - APIKeyHeader: []
      tags:
        - user
      summary: Update my avatar
      consumes:
        - application/json
      parameters:
        - in: body
          name: data
          schema:
            type: object
            properties:
              url:
                type: string
          
      responses:
        200:
          description: OK
        401:
          description: Unauthorized 
          
  /users/{id}/info/avatar:
    get:
      tags:
        - user
      summary: get user's avatar
      produces:
        - application/json
      parameters:
        - in: path
          required: true
          name: id
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              url:
                type: string
        401:
          description: Unauthorized 
        
  /users/my/info/:
    put:
      security: 
        - APIKeyHeader: []
      tags:
        - user
      summary: Update my information
      consumes:
        - application/json
      parameters: 
        - in: body
          name: data
          schema:
            properties:
              qq:
                type: string
              show_stdnum:
                type: boolean
              show_qq:
                type: boolean
      
      responses:
        200:
          description: OK, update sucessfully
        400:
          description: this qq number has been used
        401:
          description: Unauthorized 
    get:
      security: 
        - APIKeyHeader: []
      tags: 
        - user
      summary: Get my information
      responses:
        200:
          description: OK, return my information
          schema:
            type: object
            properties:
              id:
                type: integer
                description: user id
              stdnum:
                type: string
              department_id:
                type: integer
              department_name:
                type: string
              username:
                type: string
              qq:
                type: string
              show_stdnum:
                type: boolean
              show_qq:
                type: boolean
              booknum:
                type: integer
              likes:
                type: integer
              rank:
                type: integer
              contribute:
                type: integer
      
  /users/{id}/info/:
    get:
      tags: 
        - user
      summary: Get user's information
      parameters: 
        - in: path
          name: id
          required: true
          type: integer
          
      responses:
        200:
          description: OK, return user's information
          schema:
            type: object
            properties:
              id:
                type: integer
                description: user id
              stdnum:
                type: string
              openid:
                type: string
              username:
                type: string
              qq:
                type: string
              booknum:
                type: integer
              likes:
                type: integer
              is_liked:
                type: boolean
              step:
                type: integer
                description: today's step
              rank:
                type: integer
              contribute:
                type: integer
        
        400:
          description: User does not exist
          
  /users/lib/:
    post:
      tags: 
        - user
      summary: update library
      consumes:
        - application/json
      parameters: 
        - in: body
          name: data
          schema:
            type: object
            properties:
              stdnum:
                type: string
              password:
                type: string
      responses:
        200:
          description: OK
        400:
          description: Bad Request
      
  /rank/lib:
    get:
      security: 
        - APIKeyHeader: []
      tags: 
        - rank
      summary: Get library rank, return a list
      parameters: 
        - in: query
          name: page
          type: integer
          default: 1
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              total_page:
                type: integer
              now_page:
                type: integer
              my:
                type: object
                properties:
                  rank:
                    type: integer
                  booknum:
                    type: integer
                  user_id:
                    type: integer
                  username:
                    type: string
                  likes:
                    type: integer
              list:
                type: array
                items:
                  type: object
                  properties:
                    booknum:
                      type: integer
                    user_id:
                      type: integer
                    username:
                      type: string
                    likes:
                      type: integer

  /rank/step/person:
    get:
      security: 
        - APIKeyHeader: []
      tags: 
        - rank
      summary: Get step rank, return a list
      parameters: 
        - in: query
          name: page
          type: integer
          default: 1
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              total_page:
                type: integer
              now_page:
                type: integer
              my:
                type: object
                properties:
                  rank:
                    type: integer
                  step:
                    type: integer
                  user_id:
                    type: integer
                  username:
                    type: string
                  likes:
                    type: integer
              list:
                type: array
                items:
                  type: object
                  properties:
                    step:
                      type: integer
                    user_id:
                      type: integer
                    username:
                      type: string
                    likes:
                      type: integer
                  
                  
  /rank/step/dept/week:
    get:
      tags: 
        - rank
      summary: Get step rank, return a list
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                step:
                  type: integer
                department_id:
                  type: integer
                department_name:
                  type: string
                likes:
                  type: integer
                count:
                  type: integer
                  
  /rank/step/dept/month:
    get:
      tags: 
        - rank
      summary: Get step rank, return a list
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                step:
                  type: integer
                department_id:
                  type: integer
                department_name:
                  type: string
                likes:
                  type: integer
                count:
                  type: integer
                  
  /werun/:
    get:
      summary: Get my werun data
      security:
        - APIKeyHeader: []
      tags: 
        - werun
      parameters: 
        - in: query
          name: start
          type: string
          description: from which date to start
          default: YYYY-MM-DD
        - in: query
          name: end
          type: string
          description: from which date to end
          default: YYYY-MM-DD
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                time:
                  type: string
                step:
                  type: integer
        401:
          description: Unauthorized 
    post:
      summary: Update my werun data
      tags: 
        - werun
      security: 
        - APIKeyHeader: []
      consumes:
        - application/json
      parameters:
        - in: body
          name: array
          description: information from wx.getWeRunData()
          schema:
            type: object
            properties:
              encryptedData:
                type: string
              iv:
                type: string
                
      responses:
        200:
          description: Created
        401:
          description: Unauthorized 
  /likes/:
    post:
      tags: 
        - like
      security: 
        - APIKeyHeader: []
      summary: Add new like 
      consumes: 
        - application/json
      parameters: 
        - in: body
          name: data
          schema:
            type: object
            properties:
              star_id:
                type: integer
          
      responses:
        200:
          description: OK
        400:
          description: Already liked
        401:
          description: Unauthorized 
          
    delete:
      tags: 
        - like
      security: 
        - APIKeyHeader: []
      summary: Unlike
      consumes: 
        - application/json
      parameters: 
        - in: body
          name: data
          schema:
            type: object
            properties:
              star_id:
                type: integer

      responses:
        200:
          description: OK
        400:
          description: Already unliked
        401:
          description: Unauthorized 
    
    
  /suggestions/:
    post:
      security: 
        - APIKeyHeader: []
      tags: 
        - others
      summary: Add a suggestion
      consumes: 
        - application/json
      parameters: 
        - in: body
          name: data
          schema:
            type: object
            properties:
              contact:
                type: string
              content:
                type: string

          
      responses:
        200:
          description: OK
        401:
          description: Unauthorized 
          

        
    
      
        